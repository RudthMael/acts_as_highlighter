= acts_as_highlighter

Распространяется по MIT-лицензии

==== Добавляет основанную на JavaScript подсветку синтаксиса

Собственно подсветка взята вот отсюда <https://github.com/alexgorbatchev/SyntaxHighlighter>. Подробней можно посмотреть здесь <http://alexgorbatchev.com/SyntaxHighlighter/>. Однако стоит отметить, что плагин добавляет лишь минимальную функциональность, иначе говоря - просто код с подсветкой. Никаких фич типа -"темы"-, -"подсветка строк"- и т.п. - имеющим место в библиотеке источнике - здесь нет.

==== Добавление в Rails

нужно в +Gemfile+ прописать:

    gem 'acts_as_highlighter', git: 'git://github.com/logrusorgru/acts_as_highlighter.git'

и выполнить

    bundle install

после чего добавить в файл +/app/assets/stylesheet/application.css[.scss|.sass]+ строку:

    *= require acts_as_highlighter

и соответственно в +/app/assets/javascripts/application.js[.coffee]+ строку:

    //= require acts_as_highlighter


==== Пространство имён ( модули и методы )

Добавляется модуль +ActsAsHighlighter+ и у него всего один метод, \+code_block()+, который принимает два параметра:

1. текст для подсветки и 
2. синтаксис. 

Кроме того к классу +String+ добавляется метод \+highlight()+, единственный параметр которого - синтаксис.

==== Доступны следующие вырианты синтаксиса:

* +as3+, +actionscript3+
* +bash+, +shell+
* +cf+, +coldfusion+
* +c-sharp+, +csharp+
* +cpp+, +c+
* +css+
* +delphi+, +pas+, +pascal+
* +diff+, +patch+
* +erl+, +erlang+
* +groovy+
* +js+, +jscript+, +javascript+
* +jfx+, +javafx+
* +perl+, +pl+
* +php+
* +plain+, +text+
* +ps+, +powershell+
* +py+, +python+
* +rails+, +ror+, +ruby+
* +scala+
* +sql+
* +vb+, +vbnet+
* +xml+, +xhtml+, +xslt+, +html+

помимо это ещё добавлены от сюда <http://www.undermyhat.org/blog/2009/09/list-of-brushes-syntaxhighligher/>

* +ada+
* +asm+, +x86+                 \_#_эта_и_следующая_-_разные_варианты_
* +nams8086+, +8086+, +nams+, +masm+
* +ahk+, +autohotkey+
* +bat+, +cmd+, +batch+
* +clojure+, +Clojure+, +clj+
* +latex+, +tex+
* +lua+
* +yaml+, +yml+

==== Синтаксис по-умолчанию

Собственно сам параметр синтаксис, можно не передавать - если установить нужное значение по-умолчанию. Первоначально оно установленно в *ruby*. Изменить его достаточно просто - при инициализации приложения установить +ActsAsHighlighter.default_syntax+ в нужное значение, например так:

    ActsAsHighlighter.default_syntax = "c"

Эту строку можно поместить например в файл +highlighter_init.rb+ в папке +/config/initializers/+ приложения. Или изменять динамически в процессе работы приложения.

==== Применение ( примеры для _haml_ )

Ну например так:

    %div.code_container= code_block("def a; 'a' end")   # синтаксис *ruby* по-умолчанию

...или так:

    %p= my_string_variable.highlight("cpp")   # переменные строки можно подсвечивать на прямую

ну и совсем простой вариант:

    %pre{ :class => "brush: ruby;" }
      :preserve
        def a
          puts 'a'
        end

==== Применение ( примеры для _erb_ )

Ну например так:

    <div class="code_container">
    	<%= code_block("def a; 'a' end")  %> <!-- синтаксис *ruby* по-умолчанию -->
    </div>

...или так:

    <p>
        <%= my_string_variable.highlight("cpp") %>  <!-- переменные строки можно подсвечивать на прямую -->
    </p>

ну и совсем простой вариант:

    <pre class="brush: ruby;">
        def a
          puts 'a'
        end
    </pre>

==== Тестирование

Средствами тестовых инструментов проверок не проводилось. Однако работоспособность плагина была проверена на тестовом _Rails_ приложении. Результат этого кода в application.html.erb:

    <%= ActsAsHighlighter.code_block("def a; puts 'a' end") %>
    <%= "alert(\"Hello world!!!\")".highlight("js") %>

можете увидеть в папке */test/* плагина - файл *check_acts_as_highlighter.png*. Тот же самый результат, но с присутствием в дирректории приложения */config/initializers/* файла *highlighter_init.rb* следующего содержания:

    ActsAsHighlighter.default_syntax = "js"

и соответственно изменёных на

    <%= ActsAsHighlighter.code_block("def a; puts 'a' end", "ruby") %>
    <%= "alert(\"Hello world!!!\")".highlight %>

строках кода в application.html.erb. Вобщем эта штука работает!


==== Основания

Сам вариант подсветки мне показался более привлекательным по сравнению с тем же *CodeRay* <http://coderay.rubychan.de/>, тем более, что весь механизм выполняется на стороне клинта - т.е. разгружает сервер. Конечно итоговые .сss и .js файлы будут гораздо больше размером, однако они ( ну по крайней мере .css ) сохраняются в кэше браузера пользователя - как правило - и достаточно одной загрузки, для последующего, безболезненного сёрфинга по сайту. Минус в том, что клиент без JavaScript в браузере не увидит подсветки - но это маленький минус, учитывая количество клиентов без JavaScript. В целом плагин - это один из способов, **минимальными усилиями**, внедрить подсветку синтаксиса на сайт.

==== Точки роста

Реализация возможностей библиотеки SyntaxHighlighter не охваченных этой версией плагина, а именно - различные темы оформления, подсветка строк (выделение) и т.д.

==== Послесловие

Free for use ( лицензия MIT )
Free for fork
Free for patch