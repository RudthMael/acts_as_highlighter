= acts_as_highlighter

Распространяется по MIT-лицензии

==== Добавляет основанную на JavaScript подсветку синтаксиса

Собственно подсветка взята вот отсюда <https://github.com/alexgorbatchev/SyntaxHighlighter>. Подробней можно посмотреть здесь <http://alexgorbatchev.com/SyntaxHighlighter/>. Однако стоит отметить, что плагин добавляет лишь минимальную функциональность, иначе говоря - просто код с подсветкой. Никаких фич типа "темы", "подсветка строк" и т.п. - имеющим место в библиотеке источнике - здесь нет.

==== Добавляет в Rails проект команда

    script/plugin install git://github.com/logrusorgru/acts_as_highlighter.git

альтернативный вариант в `Gemfile` прописать:

    gem 'acts_as_highlighter', git: 'git://github.com/logrusorgru/acts_as_highlighter.git'

и выполнить `bundle install`


==== Пространство имён ( модули и методы )

Добавляется модуль `ActsAsHighlighter` и у него всего один метод, `code_block( )`, который принимает два параметра:

1) текст для подсветки и 
2) синтаксис. 

Кроме того к классу `String` добавляется метод `highlight()`, единственный параметр которого - синтаксис.

==== Доступны следующие вырианты синтаксиса:

* `as3`, `actionscript3`
* `bash`, `shell`
* `cf`, `coldfusion`
* `c-sharp`, `csharp`
* `cpp`, `c`
* `css`
* `delphi`, `pas`, `pascal`
* `diff`, `patch`
* `erl`, `erlang`
* `groovy`
* `js`, `jscript`, `javascript`
* `jfx`, `javafx`
* `perl`, `pl`
* `php`
* `plain`, `text`
* `ps`, `powershell`
* `py`, `python`
* `rails`, `ror`, `ruby`
* `scala`
* `sql`
* `vb`, `vbnet`
* `xml`, `xhtml`, `xslt`, `html`

==== Синтаксис по-умолчанию

Собственно сам параметр синтаксис, можно не передавать - если установить нужное значение по-умолчанию. Первоначально оно установленно в "ruby". Изменить его достаточно просто - при инициализации приложения установить `ActsAsHighlighter::DEFAULT_SYNTAX` в нужное значение, например так:

    ActsAsHighlighter::DEFAULT_SYNTAX = "c"

Эту строку можно поместить например в файл `highlighter-config.rb` в папке `/config/initializers/` приложения.

==== Применение ( примеры для haml )

Ну например так:

    %div.code_container= code_block("def a; 'a' end")   # синтаксис *ruby* по-умолчанию

...или так:

	%p= my_string_variable.highlight("cpp")   # переменные строки можно подсвечивать на прямую

ну и совсем простой вариант:

    %pre{ :class => "brush: ruby;" }
      :preserve
        def a
          puts 'a'
        end


==== Тестирование

Тестирование не проводилось


==== Основания

Сам вариант подсветки мне показался более привлекательным по сравнению с тем же CodeRay <http://coderay.rubychan.de/>, тем более, что весь механизм выполняется на стороне клинта - т.е. разгружает сервер. Конечно итоговые .сss и .js файлы будут гораздо больше размером, однако они ( ну по крайней мере .css ) сохраняются в кэше браузера пользователя - как правило - и достаточно одной загрузки, для последующего, безболезненного сёрфинга по сайту. Минус в том, что клиент без JavaScript в браузере не увидит подсветки - но это маленький минус, учитывая количество клиентов без JavaScript. В целом плагин - это один из способов, *минимальными усилиями*, внедрить подсветку синтаксиса на сайт.

==== Точки роста

Реализация возможностей библиотеки SyntaxHighlighter не охваченных этой версией плагина, а именно - различные темы оформления, подсветка строк (выделение) и т.д.

==== Спасибо

AlexGorbatchev за библиотеку.